"use client";import Link from "next/link";import { usePathname } from "next/navigation";import { cn } from "@/lib/utils";import {   Home,   Mail,   BookOpen,   CheckSquare,   Users,   Settings,   LogOut } from "lucide-react";import { Button } from "@/components/ui/button";import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar";import { useClerk, useUser } from "@clerk/nextjs";const sidebarItems = [  {    title: "Dashboard",    href: "/dashboard",    icon: Home,    section: "overview"  },  {    title: "Inbox",    href: "/dashboard/inbox",     icon: Mail,    section: "overview"  },  {    title: "Lesson",    href: "/dashboard/lesson",    icon: BookOpen,    section: "overview"  },  {    title: "Task",    href: "/dashboard/task",    icon: CheckSquare,    section: "overview"  },  {    title: "Group",    href: "/dashboard/group",    icon: Users,    section: "overview"  }];const friends = [  {    name: "Presas Mahiole",    avatar: "/avatars/presas.jpg",    status: "Student"  },  {    name: "Sir Dandy",    avatar: "/avatars/dandy.jpg",     status: "Old Friend"  },  {    name: "Jhon Tosan",    avatar: "/avatars/jhon.jpg",    status: "Friend"  }];export function DashboardSidebar() {  const pathname = usePathname();  const { signOut } = useClerk();  const { user } = useUser();  return (    <div className="w-[260px] bg-card border-r border-border h-screen flex flex-col">      {/* Logo */}      <div className="p-4 border-b border-border">        <div className="flex items-center gap-2">          <div className="w-8 h-8 rounded-lg flex items-center justify-center">            <div               className="w-6 h-6 rounded-md flex items-center justify-center"              style={{ background: 'linear-gradient(135deg, #7C5CFC 0%, #9C7DFF 100%)' }}            >              <span className="text-white font-bold text-xs">C</span>            </div>          </div>          <span className="font-semibold text-foreground">Coursue</span>        </div>      </div>      {/* Navigation */}      <div className="flex-1 py-4">        {/* Overview Section */}        <div className="px-4">          <h3 className="text-xs text-muted-foreground uppercase tracking-wider font-medium mb-3">            OVERVIEW          </h3>          <nav className="space-y-1">            {sidebarItems.map((item) => {              const Icon = item.icon;              const isActive = pathname === item.href;                            return (                <Link                  key={item.href}                  href={item.href}                  className={cn(                    "flex items-center gap-3 px-3 py-2.5 rounded-lg text-sm transition-all duration-200",                    isActive                       ? "bg-primary text-white font-medium shadow-sm"                       : "text-foreground hover:bg-muted/50 hover:text-foreground"                  )}                >                  <Icon size={18} />                  {item.title}                </Link>              );            })}          </nav>        </div>        {/* Friends Section */}        <div className="px-4 mt-8">          <h3 className="text-xs text-muted-foreground uppercase tracking-wider font-medium mb-4">            FRIENDS          </h3>          <div className="space-y-2">            {friends.map((friend, index) => (              <div key={index} className="flex items-center gap-3 p-2 rounded-lg hover:bg-muted/30 cursor-pointer transition-colors">                <Avatar className="w-8 h-8">                  <AvatarImage src={friend.avatar} />                  <AvatarFallback className="bg-primary/10 text-primary text-xs">                    {friend.name.split(' ').map(n => n[0]).join('')}                  </AvatarFallback>                </Avatar>                <div className="flex-1 min-w-0">                  <p className="text-sm font-medium text-foreground truncate">{friend.name}</p>                  <p className="text-xs text-muted-foreground truncate">{friend.status}</p>                </div>              </div>            ))}          </div>        </div>      </div>      {/* Settings & Logout */}      <div className="p-4 border-t border-border space-y-2">        <Link          href="/dashboard/settings"          className="flex items-center gap-3 px-3 py-2.5 rounded-lg text-sm text-foreground hover:bg-muted/50 transition-colors"        >          <Settings size={18} />          Setting        </Link>                <Button          variant="ghost"          className="w-full justify-start gap-3 px-3 py-2.5 h-auto text-sm text-foreground hover:bg-muted/50"          onClick={() => signOut()}        >          <LogOut size={18} />          Logout        </Button>
      </div>
    </div>
  );
}
